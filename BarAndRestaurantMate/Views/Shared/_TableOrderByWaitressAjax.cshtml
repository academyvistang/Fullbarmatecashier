@model BarAndRestaurantMate.Models.HotelMenuModel
<link href="~/css/CoolTable.css" rel="stylesheet" />


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
<!--Reference the SignalR library. -->
@*<script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>*@
<!--Reference the autogenerated SignalR hub script. -->
@*<script src="~/signalr/hubs"></script>*@
<!--SignalR script to update the chat page and send messages.-->
@*<script src="~/Scripts/automationconnection.js"></script>*@

<script>
    $(function()
    {
        var canaddItemInt = $("#CanaddItemInt").val();
        if(canaddItemInt == 0)
        {
            $(".PlaceOrderByWaitress").hide();
        }
        else
        {
            $(".PlaceOrderByWaitress").show();
        }

    });

</script>

@Html.Hidden("SendViewToGuest", @Model.SendViewToGuest)
@Html.Hidden("RequestOrderId", @Model.RequestOrderId)
@Html.Hidden("GROUP", Model.GuestCredentials + "#CUSTOMER#")
@Html.Hidden("CUSTOMERIMPERSONATION", "4")
@Html.Hidden("DontJoin", Model.DontJoin)
@Html.Hidden("NewlyCreatedTable", Model.NewlyCreatedTable)
@Html.Hidden("ProcessingComplete", Model.ProcessingComplete)
@Html.Hidden("WaitressAddItem", Model.WaitressAddItem)
@Html.Hidden("ExistingMember", Model.ExistingMember)
@Html.Hidden("CanaddItemInt", Model.CanaddItemInt)




<table id="CustomerItemsTable" class="striped fixedlayout">
    <thead>
        <tr>
            <th width="5%"></th>
            <th width="60%">Item</th>
            <th width="10%">Qty</th>
            <th width="25%">Price (NGN)</th>
        </tr>
    </thead>
    <tbody id="CasesTableBody1">

        @foreach (var item in Model.RequestedItems.OrderByDescending(x => x.CreatedDate))
        {
            <tr id="@item.Id">
                <td><img style="cursor:pointer;" class="ItemRemove" src="~/images/minus_16.png" /></td>
                <td>@item.StockItem.StockItemName</td>
                <td>@item.Quantity</td>
                <td style="text-align:center;">@((item.StockItem.Discounted && item.StockItem.ClubPrice.HasValue && item.StockItem.ClubPrice.Value > 0) ? Decimal.Round(item.StockItem.ClubPrice.Value, 2) : Decimal.Round(item.StockItem.UnitPrice.Value, 2))</td>
            </tr>
        }

        <tr border="1" bgcolor="#ff4980">
            <td colspan="3">Total</td>
            <td>@((Model.RequestedItems.Any() && Model.RequestedItems.FirstOrDefault().StockItem.Discounted && Model.RequestedItems.FirstOrDefault().StockItem.ClubPrice.HasValue && Model.RequestedItems.FirstOrDefault().StockItem.ClubPrice.Value > 0) ? Decimal.Round(Model.RequestedItems.Sum(x => x.StockItem.ClubPrice.Value), 2) : Decimal.Round(Model.RequestedItems.Sum(x => x.Price), 2))</td>
            <td></td>
        </tr>

    </tbody>
</table>

@if (Model.CanAddItems)
{
    var strStyle = "display:none;";
    if (Model.RequestedItems.Any())
    {
        strStyle = "";
    }
    <div id="WaitressCustomerProcessButton" style="@strStyle">
        <form method="post" class="signin" action="@Url.Action("PlaceOrderByWaitress","Guest")">
            @Html.Hidden("TableId", Model.TableId)
            @Html.Hidden("GuestId", Model.GuestId)
            @Html.Hidden("GuestOrderId", Model.GuestOrderId)
            <input style="float:right;" class="submit button" name="WaitressProcess" id="WaitressProcess" type="submit" value="Process Guest Order" />
        </form>
    </div>
}










